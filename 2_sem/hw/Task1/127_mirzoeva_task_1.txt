DoubleLinkedList|11|return dummy == dummy -> return size == 0|isEmpty_DoubleLinkedList_checkIsEmpty
DoubleLinkedList|24|if(index < 0 || index > size) -> if(index < 0 || index >= size)|pushFront_DoubleLinkedList_TestAnotherNumber
DoubleLinkedList|17|return dummy.getPrev() -> return dummy.getNext()|getHead_DoubleLinkedList_TestanotherGetHead
DoubleLinkedList|20|return dummy.getNext() -> return dummy.getPrev()|getTail_DoubleLinkedList_TestNewGetTail
DoubleLinkedList|44|return insertAfter(getHead(), data) -> return insertBefore(getTail(), data)|getHead_DoubleLinkedList_TestanotherGetHead
DoubleLinkedList|41|return insertBefore(getTail(), data) -> return insertAfter(getHead(), data)|getHead_DoubleLinkedList_TestanotherGetHead
DoubleLinkedList|33|--size -> ++size|get_PushFrontEmptyDoubleLinkedList_TestFirst
DoubleLinkedList|62| -> size += list.getSize();|insertListAfter_TestSize
DoubleLinkedList|28|cur = cur.getPrev(); -> cur = cur.getNext();|pushFront_TestValues
DoubleLinkedList|47|node.getPrev().setPrev(node.getNext()); -> node.getPrev().setNext(node.getNext());|remove_RemoveAElement_TestValue
DoubleLinkedList|48|node.getNext().setNext(node.getPrev()); -> node.getNext().setPrev(node.getPrev());|remove_RemoveAElement_TestValue
DoubleLinkedList|55|list.getHead().setNext(node); -> list.getHead().setPrev(node);|insertListAfter_TestValues
DoubleLinkedList|56|list.getTail().setPrev(node.getNext()); -> list.getTail().setNext(node.getNext());|insertListAfter_TestValues
DoubleLinkedList|74| -> size += list.getSize();|insertListBefore_TestSize
DoubleLinkedList|67|list.getHead().setNext(node.getPrev()); -> list.getHead().setPrev(node.getPrev());|insertListBefore_TestValues
DoubleLinkedList|68|list.getTail().setPrev(node); -> list.getTail().setNext(node);|insertListBefore_TestValues

Node|13|this.next = prev; -> this.next = next;|pushFront_TestValues
Node|14|this.prev = next; -> this.prev = prev;|pushFront_TestValues
